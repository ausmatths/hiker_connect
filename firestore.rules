rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        // Common functions for reuse
        function isSignedIn() {
            return request.auth != null;
        }

        function isOwner(userId) {
            return request.auth.uid == userId;
        }

        function isValidUser() {
            return request.auth != null && (request.auth.token.email_verified == true || request.auth.token.email_verified == null);
        }

        function isAdmin() {
            return request.auth != null && (request.auth.token.admin == true || request.auth.token.admin == null);
        }

        // Trail collection rules
        match /trails/{trailId} {
            // Simplified read rule to fix immediate permission issues
            allow read: if true;  // Allow all users to read trails

            // Enhanced trail creation rules
            allow create: if isSignedIn() &&
                    request.resource.data.createdBy == request.auth.uid;

            // Update rules with additional validation
            allow update: if isSignedIn() &&
                    (resource.data.createdBy == request.auth.uid || isAdmin());

            // Deletion rules with admin override
            allow delete: if isSignedIn() &&
                    (resource.data.createdBy == request.auth.uid || isAdmin());
        }

        // User profiles
        match /users/{userId} {
            // Simplified read rule
            allow read: if true;  // Allow reading user profiles

            // Write rules with less strict validation
            allow create: if isSignedIn() && isOwner(userId);

            // Update rules with less strict validation
            allow update: if isSignedIn() && isOwner(userId);
        }

        // Events collection - CRITICAL FOR YOUR ERROR
        match /events/{eventId} {
            // Simplified read rule to fix permission denied error
            allow read: if true;  // Allow all users to read events

            // Create events with validation
            allow create: if isSignedIn() &&
                    request.resource.data.createdBy == request.auth.uid;

            // Update and delete with creator or admin privileges
            allow update, delete: if isSignedIn() &&
                    (resource.data.createdBy == request.auth.uid || isAdmin());
        }

        // Emergency contacts
        match /users/{userId}/emergencyContacts/{contactId} {
            allow read: if true;  // Allow reading emergency contacts
            allow write: if isSignedIn() && isOwner(userId);
        }

        // Default rule for any other collections
        match /{document=**} {
            allow read: if true;  // Allow reading all documents
            allow write: if isSignedIn();
        }
    }
}