// Mocks generated by Mockito 5.4.5 from annotations
// in hiker_connect/test/services/google_event_services_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i7;
import 'dart:typed_data' as _i9;

import 'package:flutter/foundation.dart' as _i10;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:google_sign_in/google_sign_in.dart' as _i4;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i11;
import 'package:googleapis/calendar/v3.dart' as _i5;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_2 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_3 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_4 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_5 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_6 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppleOptions_7 extends _i1.SmartFake implements _i3.AppleOptions {
  _FakeAppleOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignInAuthentication_8 extends _i1.SmartFake
    implements _i4.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAclResource_9 extends _i1.SmartFake implements _i5.AclResource {
  _FakeAclResource_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCalendarListResource_10 extends _i1.SmartFake
    implements _i5.CalendarListResource {
  _FakeCalendarListResource_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCalendarsResource_11 extends _i1.SmartFake
    implements _i5.CalendarsResource {
  _FakeCalendarsResource_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelsResource_12 extends _i1.SmartFake
    implements _i5.ChannelsResource {
  _FakeChannelsResource_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColorsResource_13 extends _i1.SmartFake
    implements _i5.ColorsResource {
  _FakeColorsResource_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventsResource_14 extends _i1.SmartFake
    implements _i5.EventsResource {
  _FakeEventsResource_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFreebusyResource_15 extends _i1.SmartFake
    implements _i5.FreebusyResource {
  _FakeFreebusyResource_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettingsResource_16 extends _i1.SmartFake
    implements _i5.SettingsResource {
  _FakeSettingsResource_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_17 extends _i1.SmartFake implements _i5.Event {
  _FakeEvent_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvents_18 extends _i1.SmartFake implements _i5.Events {
  _FakeEvents_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannel_19 extends _i1.SmartFake implements _i5.Channel {
  _FakeChannel_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i9.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i6.Future<_i9.Uint8List>);

  @override
  _i6.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_2(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_3(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_4(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_5(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_6(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.AppleOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeAppleOptions_7(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.AppleOptions);

  @override
  void registerListener({
    required String? key,
    required _i10.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i10.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> write({
    required String? key,
    required String? value,
    _i3.AppleOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.AppleOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> read({
    required String? key,
    _i3.AppleOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.AppleOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<bool> containsKey({
    required String? key,
    _i3.AppleOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.AppleOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> delete({
    required String? key,
    _i3.AppleOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.AppleOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<Map<String, String>> readAll({
    _i3.AppleOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.AppleOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i6.Future<Map<String, String>>);

  @override
  _i6.Future<void> deleteAll({
    _i3.AppleOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.AppleOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i4.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i11.SignInOption.standard,
      ) as _i11.SignInOption);

  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
      ) as bool);

  @override
  _i6.Stream<_i4.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i6.Stream<_i4.GoogleSignInAccount?>.empty(),
      ) as _i6.Stream<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<_i4.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i6.Future<_i4.GoogleSignInAccount?>.value(),
      ) as _i6.Future<_i4.GoogleSignInAccount?>);

  @override
  _i6.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAccessScopes,
          [scopes],
          {#accessToken: accessToken},
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i4.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i6.Future<_i4.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
        Invocation.getter(#authentication),
        returnValue: _i6.Future<_i4.GoogleSignInAuthentication>.value(
            _FakeGoogleSignInAuthentication_8(
          this,
          Invocation.getter(#authentication),
        )),
      ) as _i6.Future<_i4.GoogleSignInAuthentication>);

  @override
  _i6.Future<Map<String, String>> get authHeaders => (super.noSuchMethod(
        Invocation.getter(#authHeaders),
        returnValue: _i6.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i6.Future<Map<String, String>>);

  @override
  _i6.Future<void> clearAuthCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthCache,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i4.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [CalendarApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarApi extends _i1.Mock implements _i5.CalendarApi {
  MockCalendarApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.AclResource get acl => (super.noSuchMethod(
        Invocation.getter(#acl),
        returnValue: _FakeAclResource_9(
          this,
          Invocation.getter(#acl),
        ),
      ) as _i5.AclResource);

  @override
  _i5.CalendarListResource get calendarList => (super.noSuchMethod(
        Invocation.getter(#calendarList),
        returnValue: _FakeCalendarListResource_10(
          this,
          Invocation.getter(#calendarList),
        ),
      ) as _i5.CalendarListResource);

  @override
  _i5.CalendarsResource get calendars => (super.noSuchMethod(
        Invocation.getter(#calendars),
        returnValue: _FakeCalendarsResource_11(
          this,
          Invocation.getter(#calendars),
        ),
      ) as _i5.CalendarsResource);

  @override
  _i5.ChannelsResource get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeChannelsResource_12(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i5.ChannelsResource);

  @override
  _i5.ColorsResource get colors => (super.noSuchMethod(
        Invocation.getter(#colors),
        returnValue: _FakeColorsResource_13(
          this,
          Invocation.getter(#colors),
        ),
      ) as _i5.ColorsResource);

  @override
  _i5.EventsResource get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _FakeEventsResource_14(
          this,
          Invocation.getter(#events),
        ),
      ) as _i5.EventsResource);

  @override
  _i5.FreebusyResource get freebusy => (super.noSuchMethod(
        Invocation.getter(#freebusy),
        returnValue: _FakeFreebusyResource_15(
          this,
          Invocation.getter(#freebusy),
        ),
      ) as _i5.FreebusyResource);

  @override
  _i5.SettingsResource get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettingsResource_16(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i5.SettingsResource);
}

/// A class which mocks [EventsResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsResource extends _i1.Mock implements _i5.EventsResource {
  MockEventsResource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> delete(
    String? calendarId,
    String? eventId, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            calendarId,
            eventId,
          ],
          {
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i5.Event> get(
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? maxAttendees,
    String? timeZone,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            calendarId,
            eventId,
          ],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #maxAttendees: maxAttendees,
            #timeZone: timeZone,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #get,
            [
              calendarId,
              eventId,
            ],
            {
              #alwaysIncludeEmail: alwaysIncludeEmail,
              #maxAttendees: maxAttendees,
              #timeZone: timeZone,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Event> import(
    _i5.Event? request,
    String? calendarId, {
    int? conferenceDataVersion,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #import,
          [
            request,
            calendarId,
          ],
          {
            #conferenceDataVersion: conferenceDataVersion,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #import,
            [
              request,
              calendarId,
            ],
            {
              #conferenceDataVersion: conferenceDataVersion,
              #supportsAttachments: supportsAttachments,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Event> insert(
    _i5.Event? request,
    String? calendarId, {
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            request,
            calendarId,
          ],
          {
            #conferenceDataVersion: conferenceDataVersion,
            #maxAttendees: maxAttendees,
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #insert,
            [
              request,
              calendarId,
            ],
            {
              #conferenceDataVersion: conferenceDataVersion,
              #maxAttendees: maxAttendees,
              #sendNotifications: sendNotifications,
              #sendUpdates: sendUpdates,
              #supportsAttachments: supportsAttachments,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Events> instances(
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? maxAttendees,
    int? maxResults,
    String? originalStart,
    String? pageToken,
    bool? showDeleted,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #instances,
          [
            calendarId,
            eventId,
          ],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #maxAttendees: maxAttendees,
            #maxResults: maxResults,
            #originalStart: originalStart,
            #pageToken: pageToken,
            #showDeleted: showDeleted,
            #timeMax: timeMax,
            #timeMin: timeMin,
            #timeZone: timeZone,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Events>.value(_FakeEvents_18(
          this,
          Invocation.method(
            #instances,
            [
              calendarId,
              eventId,
            ],
            {
              #alwaysIncludeEmail: alwaysIncludeEmail,
              #maxAttendees: maxAttendees,
              #maxResults: maxResults,
              #originalStart: originalStart,
              #pageToken: pageToken,
              #showDeleted: showDeleted,
              #timeMax: timeMax,
              #timeMin: timeMin,
              #timeZone: timeZone,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Events>);

  @override
  _i6.Future<_i5.Events> list(
    String? calendarId, {
    bool? alwaysIncludeEmail,
    List<String>? eventTypes,
    String? iCalUID,
    int? maxAttendees,
    int? maxResults,
    String? orderBy,
    String? pageToken,
    List<String>? privateExtendedProperty,
    String? q,
    List<String>? sharedExtendedProperty,
    bool? showDeleted,
    bool? showHiddenInvitations,
    bool? singleEvents,
    String? syncToken,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    DateTime? updatedMin,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [calendarId],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #eventTypes: eventTypes,
            #iCalUID: iCalUID,
            #maxAttendees: maxAttendees,
            #maxResults: maxResults,
            #orderBy: orderBy,
            #pageToken: pageToken,
            #privateExtendedProperty: privateExtendedProperty,
            #q: q,
            #sharedExtendedProperty: sharedExtendedProperty,
            #showDeleted: showDeleted,
            #showHiddenInvitations: showHiddenInvitations,
            #singleEvents: singleEvents,
            #syncToken: syncToken,
            #timeMax: timeMax,
            #timeMin: timeMin,
            #timeZone: timeZone,
            #updatedMin: updatedMin,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Events>.value(_FakeEvents_18(
          this,
          Invocation.method(
            #list,
            [calendarId],
            {
              #alwaysIncludeEmail: alwaysIncludeEmail,
              #eventTypes: eventTypes,
              #iCalUID: iCalUID,
              #maxAttendees: maxAttendees,
              #maxResults: maxResults,
              #orderBy: orderBy,
              #pageToken: pageToken,
              #privateExtendedProperty: privateExtendedProperty,
              #q: q,
              #sharedExtendedProperty: sharedExtendedProperty,
              #showDeleted: showDeleted,
              #showHiddenInvitations: showHiddenInvitations,
              #singleEvents: singleEvents,
              #syncToken: syncToken,
              #timeMax: timeMax,
              #timeMin: timeMin,
              #timeZone: timeZone,
              #updatedMin: updatedMin,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Events>);

  @override
  _i6.Future<_i5.Event> move(
    String? calendarId,
    String? eventId,
    String? destination, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #move,
          [
            calendarId,
            eventId,
            destination,
          ],
          {
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #move,
            [
              calendarId,
              eventId,
              destination,
            ],
            {
              #sendNotifications: sendNotifications,
              #sendUpdates: sendUpdates,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Event> patch(
    _i5.Event? request,
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            request,
            calendarId,
            eventId,
          ],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #conferenceDataVersion: conferenceDataVersion,
            #maxAttendees: maxAttendees,
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #patch,
            [
              request,
              calendarId,
              eventId,
            ],
            {
              #alwaysIncludeEmail: alwaysIncludeEmail,
              #conferenceDataVersion: conferenceDataVersion,
              #maxAttendees: maxAttendees,
              #sendNotifications: sendNotifications,
              #sendUpdates: sendUpdates,
              #supportsAttachments: supportsAttachments,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Event> quickAdd(
    String? calendarId,
    String? text, {
    bool? sendNotifications,
    String? sendUpdates,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #quickAdd,
          [
            calendarId,
            text,
          ],
          {
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #quickAdd,
            [
              calendarId,
              text,
            ],
            {
              #sendNotifications: sendNotifications,
              #sendUpdates: sendUpdates,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Event> update(
    _i5.Event? request,
    String? calendarId,
    String? eventId, {
    bool? alwaysIncludeEmail,
    int? conferenceDataVersion,
    int? maxAttendees,
    bool? sendNotifications,
    String? sendUpdates,
    bool? supportsAttachments,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            request,
            calendarId,
            eventId,
          ],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #conferenceDataVersion: conferenceDataVersion,
            #maxAttendees: maxAttendees,
            #sendNotifications: sendNotifications,
            #sendUpdates: sendUpdates,
            #supportsAttachments: supportsAttachments,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Event>.value(_FakeEvent_17(
          this,
          Invocation.method(
            #update,
            [
              request,
              calendarId,
              eventId,
            ],
            {
              #alwaysIncludeEmail: alwaysIncludeEmail,
              #conferenceDataVersion: conferenceDataVersion,
              #maxAttendees: maxAttendees,
              #sendNotifications: sendNotifications,
              #sendUpdates: sendUpdates,
              #supportsAttachments: supportsAttachments,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Event>);

  @override
  _i6.Future<_i5.Channel> watch(
    _i5.Channel? request,
    String? calendarId, {
    bool? alwaysIncludeEmail,
    List<String>? eventTypes,
    String? iCalUID,
    int? maxAttendees,
    int? maxResults,
    String? orderBy,
    String? pageToken,
    List<String>? privateExtendedProperty,
    String? q,
    List<String>? sharedExtendedProperty,
    bool? showDeleted,
    bool? showHiddenInvitations,
    bool? singleEvents,
    String? syncToken,
    DateTime? timeMax,
    DateTime? timeMin,
    String? timeZone,
    DateTime? updatedMin,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [
            request,
            calendarId,
          ],
          {
            #alwaysIncludeEmail: alwaysIncludeEmail,
            #eventTypes: eventTypes,
            #iCalUID: iCalUID,
            #maxAttendees: maxAttendees,
            #maxResults: maxResults,
            #orderBy: orderBy,
            #pageToken: pageToken,
            #privateExtendedProperty: privateExtendedProperty,
            #q: q,
            #sharedExtendedProperty: sharedExtendedProperty,
            #showDeleted: showDeleted,
            #showHiddenInvitations: showHiddenInvitations,
            #singleEvents: singleEvents,
            #syncToken: syncToken,
            #timeMax: timeMax,
            #timeMin: timeMin,
            #timeZone: timeZone,
            #updatedMin: updatedMin,
            #$fields: $fields,
          },
        ),
        returnValue: _i6.Future<_i5.Channel>.value(_FakeChannel_19(
          this,
          Invocation.method(
            #watch,
            [
              request,
              calendarId,
            ],
            {
              #alwaysIncludeEmail: alwaysIncludeEmail,
              #eventTypes: eventTypes,
              #iCalUID: iCalUID,
              #maxAttendees: maxAttendees,
              #maxResults: maxResults,
              #orderBy: orderBy,
              #pageToken: pageToken,
              #privateExtendedProperty: privateExtendedProperty,
              #q: q,
              #sharedExtendedProperty: sharedExtendedProperty,
              #showDeleted: showDeleted,
              #showHiddenInvitations: showHiddenInvitations,
              #singleEvents: singleEvents,
              #syncToken: syncToken,
              #timeMax: timeMax,
              #timeMin: timeMin,
              #timeZone: timeZone,
              #updatedMin: updatedMin,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i6.Future<_i5.Channel>);
}
