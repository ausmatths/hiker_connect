// Mocks generated by Mockito 5.4.5 from annotations
// in hiker_connect/test/screens/profile/login_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:hiker_connect/models/event_data.dart' as _i9;
import 'package:hiker_connect/models/user_model.dart' as _i5;
import 'package:hiker_connect/services/firebase_auth.dart' as _i2;
import 'package:hiker_connect/services/google_events_service.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i2.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i3.Stream<_i4.User?>.empty(),
      ) as _i3.Stream<_i4.User?>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<_i5.UserModel?> getCurrentUserData() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserData,
          [],
        ),
        returnValue: _i3.Future<_i5.UserModel?>.value(),
      ) as _i3.Future<_i5.UserModel?>);

  @override
  _i3.Future<_i5.UserModel?> getUserData(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [uid],
        ),
        returnValue: _i3.Future<_i5.UserModel?>.value(),
      ) as _i3.Future<_i5.UserModel?>);

  @override
  _i3.Future<void> resetPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateUserProfile({
    String? displayName,
    String? bio,
    List<String>? interests,
    String? phoneNumber,
    _i5.UserLocation? location,
    DateTime? dateOfBirth,
    String? gender,
    double? height,
    double? weight,
    String? preferredLanguage,
    String? bloodType,
    String? allergies,
    String? insuranceInfo,
    List<String>? medicalConditions,
    List<String>? medications,
    List<_i5.EmergencyContact>? emergencyContacts,
    Map<String, String>? socialLinks,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [],
          {
            #displayName: displayName,
            #bio: bio,
            #interests: interests,
            #phoneNumber: phoneNumber,
            #location: location,
            #dateOfBirth: dateOfBirth,
            #gender: gender,
            #height: height,
            #weight: weight,
            #preferredLanguage: preferredLanguage,
            #bloodType: bloodType,
            #allergies: allergies,
            #insuranceInfo: insuranceInfo,
            #medicalConditions: medicalConditions,
            #medications: medications,
            #emergencyContacts: emergencyContacts,
            #socialLinks: socialLinks,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i5.UserModel?> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i3.Future<_i5.UserModel?>.value(),
      ) as _i3.Future<_i5.UserModel?>);

  @override
  _i3.Future<_i5.UserModel?> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i3.Future<_i5.UserModel?>.value(),
      ) as _i3.Future<_i5.UserModel?>);

  @override
  _i3.Future<_i5.UserModel?> signUpWithEmailAndPassword({
    required String? email,
    required String? password,
    required String? displayName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
            #displayName: displayName,
          },
        ),
        returnValue: _i3.Future<_i5.UserModel?>.value(),
      ) as _i3.Future<_i5.UserModel?>);

  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GoogleEventsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleEventsService extends _i1.Mock
    implements _i7.GoogleEventsService {
  MockGoogleEventsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> signInSilently() => (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> debugSignInProcess() => (super.noSuchMethod(
        Invocation.method(
          #debugSignInProcess,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i9.EventData>> fetchEvents({int? limit = 50}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchEvents,
          [],
          {#limit: limit},
        ),
        returnValue: _i3.Future<List<_i9.EventData>>.value(<_i9.EventData>[]),
      ) as _i3.Future<List<_i9.EventData>>);

  @override
  _i3.Future<List<_i9.EventData>> getNearbyEvents({
    required double? latitude,
    required double? longitude,
    required double? radiusInKm,
    String? keyword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNearbyEvents,
          [],
          {
            #latitude: latitude,
            #longitude: longitude,
            #radiusInKm: radiusInKm,
            #keyword: keyword,
          },
        ),
        returnValue: _i3.Future<List<_i9.EventData>>.value(<_i9.EventData>[]),
      ) as _i3.Future<List<_i9.EventData>>);

  @override
  List<_i9.EventData> getSampleEvents() => (super.noSuchMethod(
        Invocation.method(
          #getSampleEvents,
          [],
        ),
        returnValue: <_i9.EventData>[],
      ) as List<_i9.EventData>);

  @override
  _i3.Future<List<_i9.EventData>> searchEvents(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchEvents,
          [query],
        ),
        returnValue: _i3.Future<List<_i9.EventData>>.value(<_i9.EventData>[]),
      ) as _i3.Future<List<_i9.EventData>>);

  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
