plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace "com.ausmatths.hikerConnect"
    compileSdk 35
    ndkVersion = "26.3.11579264"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId "com.ausmatths.hikerConnect"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        // Read the API key from the .env file
        def envFile = rootProject.file('../.env')
        def properties = new Properties()
        if (envFile.exists()) {
            envFile.withReader('UTF-8') { reader ->
                properties.load(reader)
            }

            resValue "string", "google_maps_api_key", properties.getProperty("GOOGLE_MAPS_API_KEY", "")
        } else {
            resValue "string", "google_maps_api_key", ""
            logger.warn("No .env file found - Google Maps functionality may be limited")
        }
    }

    signingConfigs {
        debug {
            // Use the default debug keystore location
            storeFile file("${System.getProperty('user.home')}/.android/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // Firebase BOM (Bill of Materials)
    implementation platform('com.google.firebase:firebase-bom:32.7.2')

    // Core Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-storage'

    // App Check - using debug for development
    implementation 'com.google.firebase:firebase-appcheck-debug'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    // AndroidX and Multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    // Desugaring for Java 8+ features
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // Additional libraries
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
}

flutter {
    source = "../.."
}