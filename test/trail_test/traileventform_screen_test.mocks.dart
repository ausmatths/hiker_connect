// Mocks generated by Mockito 5.4.5 from annotations
// in hiker_connect/test/trail_test/traileventform_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:io' as _i14;
import 'dart:typed_data' as _i16;

import 'package:cloud_firestore/cloud_firestore.dart' as _i7;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:hiker_connect/models/event_data.dart' as _i11;
import 'package:hiker_connect/models/event_filter.dart' as _i13;
import 'package:hiker_connect/models/photo_data.dart' as _i3;
import 'package:hiker_connect/models/trail_data.dart' as _i10;
import 'package:hiker_connect/services/databaseservice.dart' as _i9;
import 'package:hive/hive.dart' as _i2;
import 'package:image_picker/image_picker.dart' as _i15;
import 'package:image_picker_platform_interface/image_picker_platform_interface.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhotoData_1 extends _i1.SmartFake implements _i3.PhotoData {
  _FakePhotoData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_2 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_3 extends _i1.SmartFake
    implements _i5.ActionCodeInfo {
  _FakeActionCodeInfo_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_4 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_5 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_6 extends _i1.SmartFake implements _i5.UserMetadata {
  _FakeUserMetadata_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_7 extends _i1.SmartFake implements _i5.MultiFactor {
  _FakeMultiFactor_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_8 extends _i1.SmartFake implements _i5.IdTokenResult {
  _FakeIdTokenResult_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_9 extends _i1.SmartFake implements _i5.User {
  _FakeUser_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_10 extends _i1.SmartFake
    implements _i6.LostDataResponse {
  _FakeLostDataResponse_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettings_11 extends _i1.SmartFake implements _i7.Settings {
  _FakeSettings_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_12<T extends Object?> extends _i1.SmartFake
    implements _i7.CollectionReference<T> {
  _FakeCollectionReference_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWriteBatch_13 extends _i1.SmartFake implements _i7.WriteBatch {
  _FakeWriteBatch_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadBundleTask_14 extends _i1.SmartFake
    implements _i7.LoadBundleTask {
  _FakeLoadBundleTask_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_15<T1 extends Object?> extends _i1.SmartFake
    implements _i7.QuerySnapshot<T1> {
  _FakeQuerySnapshot_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_16<T extends Object?> extends _i1.SmartFake
    implements _i7.Query<T> {
  _FakeQuery_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_17<T extends Object?> extends _i1.SmartFake
    implements _i7.DocumentReference<T> {
  _FakeDocumentReference_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_18<T1> extends _i1.SmartFake implements _i8.Future<T1> {
  _FakeFuture_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i9.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Box<_i10.TrailData>> getTrailBox() => (super.noSuchMethod(
        Invocation.method(
          #getTrailBox,
          [],
        ),
        returnValue: _i8.Future<_i2.Box<_i10.TrailData>>.value(
            _FakeBox_0<_i10.TrailData>(
          this,
          Invocation.method(
            #getTrailBox,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Box<_i10.TrailData>>);

  @override
  _i8.Future<_i2.Box<_i11.EventData>> getEventBox() => (super.noSuchMethod(
        Invocation.method(
          #getEventBox,
          [],
        ),
        returnValue: _i8.Future<_i2.Box<_i11.EventData>>.value(
            _FakeBox_0<_i11.EventData>(
          this,
          Invocation.method(
            #getEventBox,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Box<_i11.EventData>>);

  @override
  _i8.Future<_i2.Box<String>> getFavoritesBox() => (super.noSuchMethod(
        Invocation.method(
          #getFavoritesBox,
          [],
        ),
        returnValue: _i8.Future<_i2.Box<String>>.value(_FakeBox_0<String>(
          this,
          Invocation.method(
            #getFavoritesBox,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Box<String>>);

  @override
  _i8.Future<_i2.Box<_i3.PhotoData>> getPhotoBox() => (super.noSuchMethod(
        Invocation.method(
          #getPhotoBox,
          [],
        ),
        returnValue:
            _i8.Future<_i2.Box<_i3.PhotoData>>.value(_FakeBox_0<_i3.PhotoData>(
          this,
          Invocation.method(
            #getPhotoBox,
            [],
          ),
        )),
      ) as _i8.Future<_i2.Box<_i3.PhotoData>>);

  @override
  _i8.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i11.EventData>> getAllEvents() => (super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [],
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<int> insertTrails(_i10.TrailData? trail) => (super.noSuchMethod(
        Invocation.method(
          #insertTrails,
          [trail],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<List<_i10.TrailData>> getTrails() => (super.noSuchMethod(
        Invocation.method(
          #getTrails,
          [],
        ),
        returnValue: _i8.Future<List<_i10.TrailData>>.value(<_i10.TrailData>[]),
      ) as _i8.Future<List<_i10.TrailData>>);

  @override
  _i8.Future<void> updateTrail(
    String? trailName,
    _i10.TrailData? trail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTrail,
          [
            trailName,
            trail,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i10.TrailData?> getTrailByName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrailByName,
          [name],
        ),
        returnValue: _i8.Future<_i10.TrailData?>.value(),
      ) as _i8.Future<_i10.TrailData?>);

  @override
  _i8.Future<void> syncTrailToFirestore(_i10.TrailData? trail) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncTrailToFirestore,
          [trail],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i10.TrailData>> getTrailsFromFirestore() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrailsFromFirestore,
          [],
        ),
        returnValue: _i8.Future<List<_i10.TrailData>>.value(<_i10.TrailData>[]),
      ) as _i8.Future<List<_i10.TrailData>>);

  @override
  _i8.Future<_i10.TrailData?> getTrailByNameFromFirestore(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrailByNameFromFirestore,
          [name],
        ),
        returnValue: _i8.Future<_i10.TrailData?>.value(),
      ) as _i8.Future<_i10.TrailData?>);

  @override
  _i8.Future<void> deleteTrail(int? trailId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTrail,
          [trailId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteTrailFromFirestore(int? trailId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTrailFromFirestore,
          [trailId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i11.EventData>> getAllEventsFromBox() => (super.noSuchMethod(
        Invocation.method(
          #getAllEventsFromBox,
          [],
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<String> createEvent(_i11.EventData? event) => (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [event],
        ),
        returnValue: _i8.Future<String>.value(_i12.dummyValue<String>(
          this,
          Invocation.method(
            #createEvent,
            [event],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i11.EventData?> getEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #getEvent,
          [eventId],
        ),
        returnValue: _i8.Future<_i11.EventData?>.value(),
      ) as _i8.Future<_i11.EventData?>);

  @override
  _i8.Future<void> updateEvent(_i11.EventData? event) => (super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [event],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<String>> getUserFavoriteEvents() => (super.noSuchMethod(
        Invocation.method(
          #getUserFavoriteEvents,
          [],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> addEventToFavorites(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #addEventToFavorites,
          [eventId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> removeEventFromFavorites(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeEventFromFavorites,
          [eventId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i11.EventData>> getEventsByFilter(
          _i13.EventFilter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventsByFilter,
          [filter],
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<_i3.PhotoData> uploadPhoto(
    _i14.File? file, {
    String? caption,
    String? trailId,
    String? eventId,
    bool? generateThumbnail = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPhoto,
          [file],
          {
            #caption: caption,
            #trailId: trailId,
            #eventId: eventId,
            #generateThumbnail: generateThumbnail,
          },
        ),
        returnValue: _i8.Future<_i3.PhotoData>.value(_FakePhotoData_1(
          this,
          Invocation.method(
            #uploadPhoto,
            [file],
            {
              #caption: caption,
              #trailId: trailId,
              #eventId: eventId,
              #generateThumbnail: generateThumbnail,
            },
          ),
        )),
      ) as _i8.Future<_i3.PhotoData>);

  @override
  _i8.Future<List<_i3.PhotoData>> getPhotosForTrail(String? trailId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotosForTrail,
          [trailId],
        ),
        returnValue: _i8.Future<List<_i3.PhotoData>>.value(<_i3.PhotoData>[]),
      ) as _i8.Future<List<_i3.PhotoData>>);

  @override
  _i8.Future<List<_i3.PhotoData>> getPhotosForEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotosForEvent,
          [eventId],
        ),
        returnValue: _i8.Future<List<_i3.PhotoData>>.value(<_i3.PhotoData>[]),
      ) as _i8.Future<List<_i3.PhotoData>>);

  @override
  _i8.Future<List<_i3.PhotoData>> getUserPhotos(
    String? userId, {
    int? limit = 20,
    _i3.PhotoData? lastPhoto,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserPhotos,
          [userId],
          {
            #limit: limit,
            #lastPhoto: lastPhoto,
          },
        ),
        returnValue: _i8.Future<List<_i3.PhotoData>>.value(<_i3.PhotoData>[]),
      ) as _i8.Future<List<_i3.PhotoData>>);

  @override
  _i8.Future<bool> deletePhoto(String? photoId) => (super.noSuchMethod(
        Invocation.method(
          #deletePhoto,
          [photoId],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> deletePhotosForTrail(String? trailId) => (super.noSuchMethod(
        Invocation.method(
          #deletePhotosForTrail,
          [trailId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deletePhotosForEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #deletePhotosForEvent,
          [eventId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> updatePhotoMetadata(
    String? photoId, {
    String? caption,
    String? trailId,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhotoMetadata,
          [photoId],
          {
            #caption: caption,
            #trailId: trailId,
            #eventId: eventId,
          },
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> updatePhotoCaption(
    String? photoId,
    String? caption,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhotoCaption,
          [
            photoId,
            caption,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i3.PhotoData?> getPhotoById(String? photoId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotoById,
          [photoId],
        ),
        returnValue: _i8.Future<_i3.PhotoData?>.value(),
      ) as _i8.Future<_i3.PhotoData?>);

  @override
  _i8.Future<void> ensurePhotoIndexExists() => (super.noSuchMethod(
        Invocation.method(
          #ensurePhotoIndexExists,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> recoverUnsyncedPhotos() => (super.noSuchMethod(
        Invocation.method(
          #recoverUnsyncedPhotos,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i11.EventData>> getFilteredEvents(
          _i13.EventFilter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredEvents,
          [filter],
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<List<_i11.EventData>> getUpcomingEvents({int? limit = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpcomingEvents,
          [],
          {#limit: limit},
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<List<_i11.EventData>> getOngoingEvents() => (super.noSuchMethod(
        Invocation.method(
          #getOngoingEvents,
          [],
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<List<_i11.EventData>> getPastEvents({int? limit = 20}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPastEvents,
          [],
          {#limit: limit},
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);

  @override
  _i8.Future<List<_i11.EventData>> getGoogleEvents({
    required double? latitude,
    required double? longitude,
    required double? radiusInKm,
    String? keyword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGoogleEvents,
          [],
          {
            #latitude: latitude,
            #longitude: longitude,
            #radiusInKm: radiusInKm,
            #keyword: keyword,
          },
        ),
        returnValue: _i8.Future<List<_i11.EventData>>.value(<_i11.EventData>[]),
      ) as _i8.Future<List<_i11.EventData>>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_2(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i8.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i8.Future<_i5.ActionCodeInfo>.value(_FakeActionCodeInfo_3(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i8.Future<_i5.ActionCodeInfo>);

  @override
  _i8.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<_i5.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i8.Stream<_i5.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i8.Stream<_i5.User?>.empty(),
      ) as _i8.Stream<_i5.User?>);

  @override
  _i8.Stream<_i5.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i8.Stream<_i5.User?>.empty(),
      ) as _i8.Stream<_i5.User?>);

  @override
  _i8.Stream<_i5.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i8.Stream<_i5.User?>.empty(),
      ) as _i8.Stream<_i5.User?>);

  @override
  _i8.Future<void> sendPasswordResetEmail({
    required String? email,
    _i5.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i5.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setPersistence(_i5.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> signInWithCredential(
          _i5.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> signInWithProvider(
          _i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i8.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_5(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i8.Future<_i5.ConfirmationResult>);

  @override
  _i8.Future<_i5.UserCredential> signInWithPopup(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<void> signInWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i8.Future<String>.value(_i12.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i5.PhoneMultiFactorInfo? multiFactorInfo,
    required _i5.PhoneVerificationCompleted? verificationCompleted,
    required _i5.PhoneVerificationFailed? verificationFailed,
    required _i5.PhoneCodeSent? codeSent,
    required _i5.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i5.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
      ) as bool);

  @override
  _i5.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_6(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i5.UserMetadata);

  @override
  List<_i5.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i5.UserInfo>[],
      ) as List<_i5.UserInfo>);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  _i5.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_7(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i5.MultiFactor);

  @override
  _i8.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<_i5.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i8.Future<_i5.IdTokenResult>.value(_FakeIdTokenResult_8(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i8.Future<_i5.IdTokenResult>);

  @override
  _i8.Future<_i5.UserCredential> linkWithCredential(
          _i5.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> linkWithProvider(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> reauthenticateWithProvider(
          _i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<_i5.UserCredential> reauthenticateWithPopup(
          _i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<void> reauthenticateWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.UserCredential> linkWithPopup(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<void> linkWithRedirect(_i5.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i8.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_5(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i8.Future<_i5.ConfirmationResult>);

  @override
  _i8.Future<_i5.UserCredential> reauthenticateWithCredential(
          _i5.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue: _i8.Future<_i5.UserCredential>.value(_FakeUserCredential_4(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i8.Future<_i5.UserCredential>);

  @override
  _i8.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendEmailVerification(
          [_i5.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i8.Future<_i5.User>.value(_FakeUser_9(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i8.Future<_i5.User>);

  @override
  _i8.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updatePhoneNumber(
          _i5.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i5.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i15.ImagePicker {
  MockImagePicker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i6.XFile?> pickImage({
    required _i6.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i6.CameraDevice? preferredCameraDevice = _i6.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<_i6.XFile?>.value(),
      ) as _i8.Future<_i6.XFile?>);

  @override
  _i8.Future<List<_i6.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<List<_i6.XFile>>.value(<_i6.XFile>[]),
      ) as _i8.Future<List<_i6.XFile>>);

  @override
  _i8.Future<_i6.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<_i6.XFile?>.value(),
      ) as _i8.Future<_i6.XFile?>);

  @override
  _i8.Future<List<_i6.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<List<_i6.XFile>>.value(<_i6.XFile>[]),
      ) as _i8.Future<List<_i6.XFile>>);

  @override
  _i8.Future<_i6.XFile?> pickVideo({
    required _i6.ImageSource? source,
    _i6.CameraDevice? preferredCameraDevice = _i6.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i8.Future<_i6.XFile?>.value(),
      ) as _i8.Future<_i6.XFile?>);

  @override
  _i8.Future<_i6.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i8.Future<_i6.LostDataResponse>.value(_FakeLostDataResponse_10(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i8.Future<_i6.LostDataResponse>);

  @override
  bool supportsImageSource(_i6.ImageSource? source) => (super.noSuchMethod(
        Invocation.method(
          #supportsImageSource,
          [source],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i7.FirebaseFirestore {
  MockFirebaseFirestore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_2(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseURL => (super.noSuchMethod(
        Invocation.getter(#databaseURL),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
      ) as String);

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
        Invocation.setter(
          #databaseURL,
          _databaseURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseId => (super.noSuchMethod(
        Invocation.getter(#databaseId),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
      ) as String);

  @override
  set databaseId(String? _databaseId) => super.noSuchMethod(
        Invocation.setter(
          #databaseId,
          _databaseId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set settings(_i7.Settings? settings) => super.noSuchMethod(
        Invocation.setter(
          #settings,
          settings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Settings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettings_11(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i7.Settings);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i7.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_12<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i7.CollectionReference<Map<String, dynamic>>);

  @override
  _i7.WriteBatch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeWriteBatch_13(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i7.WriteBatch);

  @override
  _i8.Future<void> clearPersistence() => (super.noSuchMethod(
        Invocation.method(
          #clearPersistence,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> enablePersistence(
          [_i7.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #enablePersistence,
          [persistenceSettings],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i7.LoadBundleTask loadBundle(_i16.Uint8List? bundle) => (super.noSuchMethod(
        Invocation.method(
          #loadBundle,
          [bundle],
        ),
        returnValue: _FakeLoadBundleTask_14(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
      ) as _i7.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
    bool? automaticHostMapping = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFirestoreEmulator,
          [
            host,
            port,
          ],
          {
            #sslEnabled: sslEnabled,
            #automaticHostMapping: automaticHostMapping,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<_i7.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i7.GetOptions? options = const _i7.GetOptions(),
    required _i7.FromFirestore<T>? fromFirestore,
    required _i7.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryWithConverterGet,
          [name],
          {
            #options: options,
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue:
            _i8.Future<_i7.QuerySnapshot<T>>.value(_FakeQuerySnapshot_15<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
      ) as _i8.Future<_i7.QuerySnapshot<T>>);

  @override
  _i8.Future<_i7.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i7.GetOptions? options = const _i7.GetOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryGet,
          [name],
          {#options: options},
        ),
        returnValue: _i8.Future<_i7.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_15<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
      ) as _i8.Future<_i7.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i7.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectionGroup,
          [collectionPath],
        ),
        returnValue: _FakeQuery_16<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
      ) as _i7.Query<Map<String, dynamic>>);

  @override
  _i8.Future<void> disableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #disableNetwork,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i7.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [documentPath],
        ),
        returnValue: _FakeDocumentReference_17<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
      ) as _i7.DocumentReference<Map<String, dynamic>>);

  @override
  _i8.Future<void> enableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #enableNetwork,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<void> snapshotsInSync() => (super.noSuchMethod(
        Invocation.method(
          #snapshotsInSync,
          [],
        ),
        returnValue: _i8.Stream<void>.empty(),
      ) as _i8.Stream<void>);

  @override
  _i8.Future<T> runTransaction<T>(
    _i7.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {
            #timeout: timeout,
            #maxAttempts: maxAttempts,
          },
        ),
        returnValue: _i12.ifNotNull(
              _i12.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i8.Future<T>.value(v),
            ) ??
            _FakeFuture_18<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
      ) as _i8.Future<T>);

  @override
  _i8.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> waitForPendingWrites() => (super.noSuchMethod(
        Invocation.method(
          #waitForPendingWrites,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setIndexConfiguration({
    required List<_i7.Index>? indexes,
    List<_i7.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfiguration,
          [],
          {
            #indexes: indexes,
            #fieldOverrides: fieldOverrides,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfigurationFromJSON,
          [json],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
